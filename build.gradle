buildscript {
    apply from: "${rootProject.projectDir}/buildSrc/repositories.gradle"
    repositories extRepositories
    apply from: "${rootProject.projectDir}/buildSrc/buildscript-dependencies.gradle"
    dependencies extDependencies
}

group 'com.hillel.evo'
version '1.0-SNAPSHOT'

configure(allprojects) { project ->
    apply plugin: 'application'
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply from: "${rootProject.projectDir}/buildSrc/dependencies.gradle"
    apply from: "${rootProject.projectDir}/buildSrc/analyze.gradle"

    sourceCompatibility = 11

    repositories extRepositories

    distributions {
        distZip.enabled = false
        distTar.enabled = false
        bootDistZip.enabled = false
        bootDistTar.enabled = false
    }

    sourceSets {
        main.java.srcDirs += "build/generated/sources/annotationProcessor/java/main"
    }

    test {
        useJUnitPlatform {
            excludeTags 'slow'
            includeEngines 'junit-jupiter'
        }
        testLogging {
            events 'PASSED', 'FAILED', 'SKIPPED'
        }
        failFast = false
    }

    mainClassName = 'com.hillel.evo.adviser.AdviserStarter'

    springBoot {
        mainClassName = 'com.hillel.evo.adviser.AdviserStarter'
    }

    bootRun {
        systemProperties = System.properties
    }

    dependencies {
        implementation boot.starterWeb
        implementation boot.starterJpa
        implementation boot.starterThyme
        testImplementation boot.starterTest

        implementation utils.jaxbApi
        implementation utils.jaxbImpl
        implementation utils.jaxbCore

        compileOnly "org.mapstruct:mapstruct:1.3.1.Final"
        annotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"
        testAnnotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"

        testImplementation boot.starterTest
        runtimeOnly db.h2
        runtimeOnly db.postgres
        runtimeOnly db.awsSecretsmanager
        implementation db.postgres
        testImplementation db.h2

        implementation misc.swagger
        implementation misc.swaggerUI

        annotationProcessor utils.lombok
        annotationProcessor boot.annotationProcessor

        compileOnly utils.lombok
        testCompileOnly utils.lombok
        //testImplementation utils.lombok

        testImplementation testing.junit5

        implementation boot.starterSecurity
        implementation spring.messaging
        implementation spring.webSocket

        implementation hibernate.search
        implementation hibernate.em
        implementation hibernate.spatial

    }
}

wrapper {
    version = '5.6.2'
}

project(":auto-aid-adviser-user") {
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }
    dependencies {
        implementation project(':auto-aid-adviser-email')
        testImplementation project(':auto-aid-adviser-base-module')
        testImplementation project(':auto-aid-adviser-base-module').sourceSets.test.output
    }
}

project(":auto-aid-adviser-user-profile") {
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }
    dependencies {
        implementation project(':auto-aid-adviser-user')
        implementation project(':auto-aid-adviser-image')

        testImplementation project(':auto-aid-adviser-base-module')
        testImplementation project(':auto-aid-adviser-base-module').sourceSets.test.output
    }
}

project(':auto-aid-adviser-security') {
    dependencies {
        bootJar {
            enabled = false
        }
        jar {
            enabled = true
        }
        implementation project(":auto-aid-adviser-user")
        implementation security.jwt
        testImplementation project(':auto-aid-adviser-base-module')
        testImplementation project(':auto-aid-adviser-base-module').sourceSets.test.output
    }
}

project(':auto-aid-adviser-search-service') {
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }
    dependencies {
        testImplementation project(':auto-aid-adviser-base-module')
        testImplementation project(':auto-aid-adviser-base-module').sourceSets.test.output
    }
}

project(':auto-aid-adviser-websockets') {
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }
    dependencies {
        implementation project(':auto-aid-adviser-business')
        implementation project(':auto-aid-adviser-search-service')
        testImplementation project(':auto-aid-adviser-base-module')
        testImplementation project(':auto-aid-adviser-base-module').sourceSets.test.output
    }
}

project(":auto-aid-adviser-email") {
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }
    dependencies {
        implementation boot.starterMail
        implementation awsSdk.ses
        testImplementation project(':auto-aid-adviser-base-module')
        testImplementation project(':auto-aid-adviser-base-module').sourceSets.test.output
    }
}

project(':auto-aid-adviser-business') {
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }
    dependencies {
        implementation project(':auto-aid-adviser-user')
        implementation project(':auto-aid-adviser-search-service')
        implementation project(':auto-aid-adviser-image')

        testImplementation project(':auto-aid-adviser-base-module')
        testImplementation project(':auto-aid-adviser-base-module').sourceSets.test.output
    }
}

project(":auto-aid-adviser-image") {
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }

    dependencies {
        implementation awsSdk.s3
        testImplementation project(':auto-aid-adviser-base-module')
        testImplementation project(':auto-aid-adviser-base-module').sourceSets.test.output
    }
}

project(":auto-aid-adviser-base-module") {
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }

    dependencies {
        implementation files('../lib/hypersistence-optimizer-1.2.3.jar', '../lib/hypersistence-optimizer-1.2.3-javadoc.jar')
    }
}

project(":auto-aid-adviser-main") {
    jar {
        enabled = true
    }
    bootJar {
        classifier = 'boot'
    }
    dependencies {
        implementation project(':auto-aid-adviser-business')
        implementation project(':auto-aid-adviser-user')
        implementation project(':auto-aid-adviser-user-profile')
        implementation project(':auto-aid-adviser-search-service')
        implementation project(':auto-aid-adviser-email')
        implementation project(':auto-aid-adviser-security')
        implementation project(':auto-aid-adviser-websockets')
        implementation project(':auto-aid-adviser-image')
        testImplementation project(':auto-aid-adviser-base-module')
        testImplementation project(':auto-aid-adviser-base-module').sourceSets.test.output
    }
}

distributions {
    distZip.enabled = false
    distTar.enabled = false
    bootDistZip.enabled = false
    bootDistTar.enabled = false
}
