buildscript {
    apply from: "${rootProject.projectDir}/buildSrc/repositories.gradle"
    repositories extRepositories
    apply from: "${rootProject.projectDir}/buildSrc/buildscript-dependencies.gradle"
    dependencies extDependencies
}

group 'com.hillel.evo'
version '1.0-SNAPSHOT'

configure(allprojects) { project ->

    apply plugin: 'application'
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply from: "${rootProject.projectDir}/buildSrc/dependencies.gradle"
    apply from: "${rootProject.projectDir}/buildSrc/analyze.gradle"

    sourceCompatibility = 11

    repositories extRepositories

    test {
        useJUnitPlatform {
            excludeTags 'slow'
            includeEngines 'junit-jupiter'
        }
        testLogging {
            events 'PASSED', 'FAILED', 'SKIPPED'
        }
        failFast = false
    }

    mainClassName = 'com.hillel.evo.adviser.AdviserStarter'

    springBoot {
        mainClassName = 'com.hillel.evo.adviser.AdviserStarter'
    }

    dependencies {
        implementation boot.starterWeb
        implementation boot.starterJpa
        implementation utils.jaxbApi
        implementation utils.jaxbImpl
        implementation utils.jaxbCore
        testImplementation boot.starterTest

        runtimeOnly db.h2
        runtimeOnly db.postgres
        runtimeOnly db.awsSecretsmanager
        implementation misc.swagger
        implementation misc.swaggerUI

        annotationProcessor utils.lombok
        compileOnly utils.lombok

        implementation db.postgres
        testImplementation db.h2

        testImplementation testing.junit5
        testImplementation utils.lombok

    }
}

wrapper {
    version = '5.6.2'
}

project(':auto-aid-adviser-search-service') {
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }
    dependencies {
        implementation hibernate.search
        implementation hibernate.em
        implementation hibernate.spatial

    }
}

project(":auto-aid-adviser-user") {
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }
}

project(":auto-aid-adviser-main") {
    jar {
        enabled = true
    }
    bootJar {
        classifier = 'boot'
    }
    dependencies {
        implementation project(':auto-aid-adviser-user')
        implementation project(':auto-aid-adviser-search-service')
    }
}
